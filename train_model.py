# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nuri3UeTdSfO9Oed2KXIWwFmWeH6bVcz
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
import pickle

print("Starting model training...")

# 1. Load the dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/parkinsons/parkinsons.data"
df = pd.read_csv(url)

# 2. Prepare the data
X = df.drop(['name', 'status'], axis=1)
y = df['status']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Scale the features
scaler = MinMaxScaler((-1, 1))
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# 4. Train the XGBoost model
model = XGBClassifier(eval_metric='logloss')
model.fit(X_train_scaled, y_train)

# 5. Evaluate the model
y_pred = model.predict(X_test_scaled)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy * 100:.2f}%")

# 6. Save the model and the scaler
# We save the model as 'parkinson_model.json'
model.save_model('parkinson_model.json')

# We save the scaler as 'scaler.pkl'
with open('scaler.pkl', 'wb') as f:
    pickle.dump(scaler, f)

print("\nTraining complete!")
print("Model saved as: parkinson_model.json")
print("Scaler saved as: scaler.pkl")

